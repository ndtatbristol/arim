[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "arim"
dynamic = ["version"]
description = 'A Python 3 library for modelling and imaging in ultrasonic testing'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Nicolas Budyn", email = "contact@budyn.dev" },
  { name = "Rhodri Bevan", email = "" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Physics",

]
dependencies = [
  "numpy",
  "scipy",
  "numba",
  "pyyaml",
  "pooch",
]

[project.optional-dependencies]
plot = ["matplotlib"]
io = ["h5py"]

[project.urls]
Documentation = "https://github.com/ndtatbristol/arim#readme"
Issues = "https://github.com/ndtatbristol/arim/issues"
Source = "https://github.com/ndtatbristol/arim"

[tool.hatch.version]
path = "src/arim/__init__.py"

[tool.hatch.envs.default]
features = [
  "plot",
  "io",
]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest>=6.0",
  "numdifftools",
  "sphinx",
  "sphinx_rtd_theme",

]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/arim tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py38"]
line-length = 88

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
  "E",
  "F",
  "NPY",
  "I", # isort
  "UP",
  "W",
]
ignore = [
  "E731", # lambda are fine
  "E501", # line too long (in practice: only in comment or docstring)
  "NPY002", # legacy np.random API
]
unfixable = [
  # Don't touch unused imports, because we may be reexporting the API in __init__.py
  "F401",
]

[tool.ruff.isort]
known-first-party = ["arim"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["arim", "tests"]
branch = true
parallel = true
omit = [
  "src/arim/__about__.py",
]

[tool.coverage.paths]
arim = ["src/arim", "*/arim/src/arim"]
tests = ["tests", "*/arim/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
]
